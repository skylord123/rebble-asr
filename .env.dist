# ============================================================================
# Rebble ASR Environment Configuration Template
# ============================================================================
# This file serves as a template for configuring the Rebble ASR service.
# Copy this file to `.env` and update the values according to your setup.
#
# IMPORTANT: The `.env` file should NEVER be committed to version control
# as it may contain sensitive information like API keys.
# ============================================================================

# ============================================================================
# GENERAL SETTINGS
# ============================================================================

# DEBUG
# Enable detailed debug logging for troubleshooting.
# Acceptable values: true, false, 1, 0, t, yes, no
# Default: false
# When enabled, provides detailed information about:
#   - Request details and headers
#   - Audio processing metrics (chunk count, PCM data size, WAV file size)
#   - Transcription timing and performance
#   - Service communication details
DEBUG=false

# PORT
# The port on which the HTTP server will listen.
# Acceptable values: Any valid port number (1-65535)
# Default: 9999
# Note: If running in Docker, ensure this matches the port mapping in compose.yml
PORT=9999

# ============================================================================
# ASR PROVIDER CONFIGURATION
# ============================================================================

# ASR_API_PROVIDER
# The speech recognition provider to use for transcription.
# Acceptable values: groq | elevenlabs | wyoming-whisper | vosk
# Default: vosk (if no API key is set), groq (if API key is set)
#
# Provider descriptions:
#   - groq: Fast cloud-based transcription using Groq API with Whisper model
#           Requires: ASR_API_KEY
#   - elevenlabs: High-quality cloud transcription using ElevenLabs Scribe v1
#                 Requires: ASR_API_KEY
#   - wyoming-whisper: Local transcription using Wyoming-compatible service
#                      Requires: WYOMING_HOST, WYOMING_PORT
#   - vosk: Offline transcription using Vosk (no external dependencies)
#           No API key required, uses local model
#
# Fallback behavior:
#   - If provider fails or is unavailable, automatically falls back to Vosk
#   - If no API key is provided for cloud providers, falls back to Vosk
ASR_API_PROVIDER=vosk

# ASR_API_KEY
# API key for cloud-based transcription providers (Groq or ElevenLabs).
# Required when: ASR_API_PROVIDER is set to 'groq' or 'elevenlabs'
# Optional when: ASR_API_PROVIDER is 'vosk' or 'wyoming-whisper'
# Default: None (empty)
#
# How to obtain API keys:
#   - Groq: Sign up at https://console.groq.com/
#   - ElevenLabs: Sign up at https://elevenlabs.io/
#
# Example: ASR_API_KEY=your_api_key_here
ASR_API_KEY=

# ============================================================================
# WYOMING WHISPER SETTINGS
# ============================================================================
# These settings are only used when ASR_API_PROVIDER is set to 'wyoming-whisper'

# WYOMING_HOST
# The hostname or IP address of your Wyoming-Whisper service.
# Required when: ASR_API_PROVIDER=wyoming-whisper
# Default: localhost
#
# Examples:
#   - localhost (if running on the same machine)
#   - 192.168.1.100 (local network IP)
#   - wyoming-whisper (Docker service name)
WYOMING_HOST=localhost

# WYOMING_PORT
# The port number on which the Wyoming-Whisper service is listening.
# Required when: ASR_API_PROVIDER=wyoming-whisper
# Default: 10300
# Note: Ensure this matches the port exposed by your Wyoming container
WYOMING_PORT=10300

# ============================================================================
# VOSK OFFLINE MODEL SETTINGS
# ============================================================================

# VOSK_MODEL_PATH
# Path to the Vosk model directory for offline speech recognition.
# Optional: Only needed if you want to use a custom Vosk model location
# Default: /code/model (automatically downloaded during Docker build)
#
# The default Docker image includes the vosk-model-small-en-us-0.15 model.
# To use a different model:
#   1. Download a model from https://alphacephei.com/vosk/models
#   2. Extract it to a directory
#   3. Set this variable to point to that directory
#   4. Mount the directory as a volume in Docker
#
# Example: VOSK_MODEL_PATH=/path/to/custom/model
# VOSK_MODEL_PATH=/code/model

# ============================================================================
# AUDIO RECORDING SETTINGS
# ============================================================================
# These settings control whether audio files and transcripts are saved to disk
# for debugging, analysis, or quality assurance purposes.

# SAVE_RECORDINGS
# Enable or disable saving of audio recordings and transcripts.
# Acceptable values: true, false, 1, 0, t, yes, no
# Default: false
#
# When enabled:
#   - Each transcription request saves a WAV file and corresponding TXT file
#   - Files are automatically rotated to keep only the most recent recordings
#   - Requires AUDIO_RECORDINGS_DIR to be set
SAVE_RECORDINGS=false

# AUDIO_RECORDINGS_DIR
# Directory path where audio recordings and transcripts will be saved.
# Required when: SAVE_RECORDINGS=true
# Default: None (must be explicitly set)
#
# Important notes:
#   - The directory will be created automatically if it doesn't exist
#   - Ensure the application has write permissions to this directory
#   - In Docker, this should be an absolute path inside the container
#   - Use Docker volumes to persist recordings on the host system
#
# Docker example:
#   - Set this to: /recordings
#   - Add volume in compose.yml: ./recordings:/recordings
#
# File naming format:
#   - WAV files: recording_YYYYMMDD_HHMMSS.wav
#   - TXT files: recording_YYYYMMDD_HHMMSS.txt
#
# Example: AUDIO_RECORDINGS_DIR=/recordings
AUDIO_RECORDINGS_DIR=

# MAX_AUDIO_RECORDINGS
# Maximum number of audio recordings to keep before old files are deleted.
# Acceptable values: Any positive integer
# Default: 10
#
# How it works:
#   - When a new recording is saved, the oldest recordings are deleted
#   - Both WAV and TXT files are deleted together
#   - Helps prevent disk space issues from accumulating recordings
#
# Examples:
#   - 10: Keep only the last 10 recordings (default)
#   - 50: Keep the last 50 recordings
#   - 100: Keep the last 100 recordings
MAX_AUDIO_RECORDINGS=10

# ============================================================================
# DOCKER COMPOSE SETTINGS
# ============================================================================
# These variables are used by docker-compose.yml and are not read by the
# application code directly. They control Docker container configuration.

# AUDIO_DIR
# Host directory path for storing audio recordings (used by Docker volumes).
# This is mapped to AUDIO_RECORDINGS_DIR inside the container.
# Default: ./recordings (relative to compose.yml location)
#
# Example: AUDIO_DIR=/var/lib/rebble-asr/recordings
# AUDIO_DIR=./recordings

# ============================================================================
# USAGE EXAMPLES
# ============================================================================

# Example 1: Local Wyoming-Whisper setup with audio recording
# ------------------------------------------------------------
# ASR_API_PROVIDER=wyoming-whisper
# WYOMING_HOST=192.168.1.100
# WYOMING_PORT=10300
# DEBUG=true
# SAVE_RECORDINGS=true
# AUDIO_RECORDINGS_DIR=/recordings
# MAX_AUDIO_RECORDINGS=20

# Example 2: Cloud-based Groq transcription (no recording)
# ---------------------------------------------------------
# ASR_API_PROVIDER=groq
# ASR_API_KEY=gsk_your_actual_groq_api_key_here
# DEBUG=false
# SAVE_RECORDINGS=false

# Example 3: Offline Vosk with custom model and recording
# --------------------------------------------------------
# ASR_API_PROVIDER=vosk
# VOSK_MODEL_PATH=/code/custom-model
# DEBUG=true
# SAVE_RECORDINGS=true
# AUDIO_RECORDINGS_DIR=/recordings
# MAX_AUDIO_RECORDINGS=50

# Example 4: ElevenLabs cloud transcription
# ------------------------------------------
# ASR_API_PROVIDER=elevenlabs
# ASR_API_KEY=your_elevenlabs_api_key_here
# DEBUG=false

# ============================================================================
# TROUBLESHOOTING
# ============================================================================
#
# Issue: "No API key set, using Vosk for transcription"
# Solution: Set ASR_API_KEY when using groq or elevenlabs providers
#
# Issue: "Wyoming-whisper selected but Wyoming package not installed"
# Solution: Ensure wyoming package is installed (included in requirements.txt)
#
# Issue: "Failed to create audio recordings directory"
# Solution: Check directory permissions and path validity
#           In Docker, ensure the path is inside the container
#
# Issue: "SAVE_RECORDINGS is enabled but AUDIO_RECORDINGS_DIR is not set"
# Solution: Set AUDIO_RECORDINGS_DIR to a valid directory path
#
# Issue: Recordings not appearing on host system
# Solution: Ensure Docker volume is correctly mapped in compose.yml
#           Example: - ./recordings:/recordings
#
# For more information, see README.md or visit:
# https://github.com/pebble-dev/rebble-asr

